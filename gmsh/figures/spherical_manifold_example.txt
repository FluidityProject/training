//Gmsh .geo file used for spherical manifold.
//
//Applied Modelling and Computation Group
//Last modified 20/10/2011

Point(1) = {0,0,0};            //The center of the sphere
Point(2) = {0, 0,6.37101e+06}; //The North Pole

PolarSphere(1) = {1,2};

//Point 3: 10 lon 5 lat
Point_lon_rad = (10)*(Pi/180);
Point_lat_rad = (5)*(Pi/180);
Point_3_stereographic_x = -Cos(Fabs(Point_lon_rad))*Cos(Fabs(Point_lat_rad))/
    ( 1 + Sin(Fabs(Point_lat_rad)) );
Point_3_stereographic_y = Cos(Fabs(Point_lat_rad))*Sin(Fabs(Point_lon_rad))/
    ( 1 + Sin(Fabs(Point_lat_rad)) );

Point(3) = {Point_3_stereographic_x, Point_3_stereographic_y, 0};

//Point 4: 10 lon 25 lat
Point_lon_rad = (10)*(Pi/180);
Point_lat_rad = (25)*(Pi/180);
Point_4_stereographic_x = -Cos(Fabs(Point_lon_rad))*Cos(Fabs(Point_lat_rad))/
    ( 1 + Sin(Fabs(Point_lat_rad)) );
Point_4_stereographic_y = Cos(Fabs(Point_lat_rad))*Sin(Fabs(Point_lon_rad))/
    ( 1 + Sin(Fabs(Point_lat_rad)) );

Point(4) = {Point_4_stereographic_x, Point_4_stereographic_y, 0};

//Point 5: 30 lon 25 lat
Point_lon_rad = (30)*(Pi/180);
Point_lat_rad = (25)*(Pi/180);
Point_5_stereographic_x = -Cos(Fabs(Point_lon_rad))*Cos(Fabs(Point_lat_rad))/
    ( 1 + Sin(Fabs(Point_lat_rad)) );
Point_5_stereographic_y = Cos(Fabs(Point_lat_rad))*Sin(Fabs(Point_lon_rad))/
    ( 1 + Sin(Fabs(Point_lat_rad)) );

Point(5) = {Point_5_stereographic_x, Point_5_stereographic_y, 0};

//Point 6: 30 lon 5 lat
Point_lon_rad = (30)*(Pi/180);
Point_lat_rad = (5)*(Pi/180);
Point_6_stereographic_x = -Cos(Fabs(Point_lon_rad))*Cos(Fabs(Point_lat_rad))/
    ( 1 + Sin(Fabs(Point_lat_rad)) );
Point_6_stereographic_y = Cos(Fabs(Point_lat_rad))*Sin(Fabs(Point_lon_rad))/
    ( 1 + Sin(Fabs(Point_lat_rad)) );

Point(6) = {Point_6_stereographic_x, Point_6_stereographic_y, 0};

//Function to break distance between two points into smaller segments.
Function DrawParallel
 alpha = parallelSectionStartingY/parallelSectionStartingX;
 parallelRadius = Sqrt(parallelSectionStartingX^2 + parallelSectionStartingY^2);
 deltaAlpha = (parallelSectionEndingY/parallelSectionEndingX - 
    parallelSectionStartingY/parallelSectionStartingX)/pointsOnParallel;
 For t In {1:pointsOnParallel}
  alpha += deltaAlpha;
  newParallelPointX = (parallelSectionStartingX/Fabs(parallelSectionStartingX))
    *parallelRadius/(Sqrt(alpha^2 + 1));
  newParallelPointY = newParallelPointX*alpha;
  newPointOnParallel = newp;
  Point(newPointOnParallel) = {newParallelPointX, newParallelPointY, 0};
 EndFor
 BSpline(newParallelID) = {firstPointOnParallel, newPointOnParallel-
    (pointsOnParallel-1):newPointOnParallel, lastPointOnParallel};
Return

//Draw south-most zonal of the Domain. Point 3 to Point 6

//Assign parameters to variables and then call function DrawParallel,

pointsOnParallel = 200;
parallelSectionStartingX = Point_3_stereographic_x;
parallelSectionStartingY = Point_3_stereographic_y;
firstPointOnParallel = 3;
parallelSectionEndingX = Point_6_stereographic_x;
parallelSectionEndingY = Point_6_stereographic_y;
lastPointOnParallel = 6;
newParallelID = 1;
Call DrawParallel;

//Draw north-most zonal of the Domain. Point 4 to Point 5
//Assign parameters to variables and then call function DrawParallel,
pointsOnParallel = 200; 
parallelSectionStartingX = Point_4_stereographic_x;
parallelSectionStartingY = Point_4_stereographic_y;
firstPointOnParallel = 4;
parallelSectionEndingX = Point_5_stereographic_x;
parallelSectionEndingY = Point_5_stereographic_y;
lastPointOnParallel = 5;
newParallelID = 2;
Call DrawParallel;

//Draw western-most meridional
BSpline(3) = {3, 4};

//Draw eastern-most meridional
BSpline(4) = {5, 6};

Line Loop(6) = {3,2,4,-1};
Plane Surface(7) = {6};
Physical Surface(8) = {7};

Field[50] = MathEval;
Field[50].F = "30000";

Background Field = 50;

